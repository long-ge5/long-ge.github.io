# 此工作流程未使用 GitHub 认证的操作。
#它们由第三方提供，并受以下机构管辖：
# 单独的服务条款、隐私政策和支持
#文档。

# 构建 Jekyll 站点并将其部署到 GitHub Pages 的示例工作流程
名称：将 Jekyll 站点部署到 Pages

在：
  #针对默认分支的个体上运动
    分支：[ “主人” ]     [ “主人” ]  [ “master” ]   [ “master” ]

  # 允许您从“操作”选项卡手动运行此工作流程# 允许您从“操作”选项卡手动运行此工作流程
  工作流调度：

# 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages
权限：
  内容：已读
  页数： 写
  id-token：写入

# 只允许一次队列配置，跳过队列的运行和最新队列之间的队列运行。
#但是完成后，不要取消发送的运行，因为我们希望这些生产配置能够。
並发：
  组：“页面”
  正在取消：false

工作：
  #建立作业# 建立作业
  建造：
    运行于：ubuntu-latest
    脚步：
      -- 名称：结帐
        用途：actions/checkout@v4
      -名称：安装 Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
